package ch.hevs.boe.entity.mob.boss

import ch.hevs.boe.entity.mob.Mob
import ch.hevs.boe.physics.Position

import scala.collection.mutable.ArrayBuffer



abstract class Boss(pos: Position, width: Int, height: Int, callbackOnKilled: (Mob) => Unit) extends Mob(pos, width, height, callbackOnKilled) {

//  private val subscribers: ArrayBuffer[() => Unit] = new ArrayBuffer[() => Unit]()
//
//  def subscribeOnKill(cb:() => Unit) = {
//    subscribers.addOne(cb)
//  }


<<<<<<< HEAD
  override protected def _dispose(): Unit = {
    super._dispose()
    for(s <- subscribers.clone) {
      s()
    }
=======
  override def kill(): Unit = {
    super.kill()
//    for(s <- subscribers.clone) {
//      s()
//    }
>>>>>>> e01bdf8c5455bb61abd97b6b2ce52b6c78fd1f60
  }

}
